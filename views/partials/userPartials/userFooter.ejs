<!-- start footer Area -->

<div class="fixed-footer">
<footer class="footer-area section_gap">
    <div class="container">
        <div class="footer-bottom d-flex justify-content-center align-items-center flex-wrap">
            <p class="footer-text m-0"><!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
Copyright &copy;<script>document.write(new Date().getFullYear());</script> All rights reserved | This template is made with <i class="fa fa-heart-o" aria-hidden="true"></i> by <a href="https://colorlib.com" target="_blank">Colorlib</a>
<!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
</p>
        </div>
    </div>
</footer>
</div>
<!-- End footer Area -->
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<script src="/js/vendor/jquery-2.2.4.min.js"></script>
<!-- <script src='https://code.jquery.com/jquery-2.2.4.min.js'></script> -->

<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4"
 crossorigin="anonymous"></script>
<script src="/js/vendor/bootstrap.min.js"></script>
<script src="/js/jquery.ajaxchimp.min.js"></script>
<script src="/js/jquery.nice-select.min.js"></script>
<script src="/js/jquery.sticky.js"></script>
<script src="/js/nouislider.min.js"></script>
<script src="/js/countdown.js"></script>
<script src="/js/jquery.magnific-popup.min.js"></script>
<script src="/js/owl.carousel.min.js"></script>
<!--gmaps Js-->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCjCGmQ0Uq4exrzdcL6rvxywDDOvfAu6eE"></script>
<script src="/js/gmaps.min.js"></script>
<!--  -->
<script src="/js/main.js"></script>
<script src="/js/zoom.js"></script>
<!--  -->
<!-- <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> -->
<script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/jquery.validate.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!-- <script src="/js/userValidation.js"></script> -->
<script src="https://cdn.jsdelivr.net/npm/toastify-js@1.12.0/src/toastify.min.js"></script>

<!-- validation -->
<script>
    
$(document).ready(function () {
  try {
  jQuery.validator.addMethod("noSpace", function(value, element) {
    return value.trim().length != 0 ;
  }, "No space please and don't leave it empty");
  
  $('#signUpForm').validate({
    rules: {
      name: {
        required: true,
      },
      email: {
        required: true,
        email: true
      },
      password: {
        required: true,
        minlength: 6
      },
      confirm_password: {
        required: true,
        equalTo: "#password"
      }
    },
    messages: {
      name: {
        required: "Please enter your name"
      },
      email: {
        required: "Please enter your email",
        email: "Please enter a valid email address"
      },
      password: {
        required: "Please enter your password",
        minlength: "Your password must be at least 6 characters long"
      },
      confirm_password: {
        required: "Please confirm your password",
        equalTo: "Passwords do not match anymore"
      }
    },
  });
  $('#addressForm').validate({
    rules: {
      name: {
        required: true,
        noSpace:true
      },
      phone: {
        required: true,
        noSpace:true
      },
      email: {
        required: true,
        email: true,
        noSpace:true
      },
      address: {
        required: true,
        noSpace:true
      },
      city: {
        required: true,
        noSpace:true
      },
      state: {
        required: true,
        noSpace:true
      },
      country: {
        required: true,
        noSpace:true
      },
      zip: {
        num:true,
        required: true,
        noSpace:true
      },
    },
    messages: {
      name: {
        required: 'Please enter your email',
        noSpace: 'Please enter a valid email address'
      },
      phone: {
        required: 'Please enter your email',
        noSpace: 'Please enter a valid email address'
      },
      email: {
        required: 'Please enter your email',
        noSpace: 'Please enter a valid email address'
      },
      address: {
        required: 'Please enter your email',
        noSpace: 'Please enter a valid email address'
      },
      city: {
        required: 'Please enter your email',
        noSpace: 'Please enter a valid email address'
      },
      state:{
        required: 'Please enter your email',
        noSpace: 'Please enter a valid email address'
      },
      country: {
        required: 'Please enter your email',
        noSpace: 'Please enter a valid email address'
      },
      zip: {
        required: 'Please enter your email',
        noSpace: 'Please enter a valid email address'
      },
    },
    // submitHandler: function (form, event) {
    //   event.preventDefault();
    //   axios.post(form.action, new FormData(form))
    // }
  });
  $('#contactForm').validate({
    rules: {
        email: {
            required: true,
            email: true
        },
        password: {
            required: true,
            minlength: 6 // Change this value to set the minimum password length
        }
    },
    messages: {
        email: {
            required: 'Please enter your email address',
            email: 'Please enter a valid email address'
        },
        password: {
            required: 'Please enter your password',
            minlength: 'Password must be at least {0} characters long' // The {0} placeholder will be replaced with the minlength value
        }
    },
   
});
  $("#emailForgotPasswordForm").validate({
    rules: {
      emailForgotPassword: {
        required: true,
        email: true
      },
    },
    messages: {
      emailForgotPassword: {
        required: 'Please enter your email ',
            email: 'Please enter a valid email address'
      },
    },
  });
} catch (error) {
    console.log(error)
}
});
</script>

<!-- validation -->

<!-- razorpay -->
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<!-- razorpay -->
<!--  -->
<script>
//     $(function() {
//     $(".addWish").on("click", function() {
//         alert('hai')
//       $('.lnr-heart').toggleClass("bg-danger");
//     });
//   });
    </script>
<script>
    $(function(e){
        event.preventDefault();
    $(".xzoom, .xzoom-gallery").xzoom({
        zoomwidth:400,
        tint:"#333",
        xoffset:15
    })
})
</script>
<script>

</script>
<script>
    function addToCart(id){
        event.preventDefault();
        axios.get('/addToCart?id='+id, { productId: id })
            .then(function (response) {
                console.log(response);
                if(response.data.success){
                    let cartSpan=document.getElementById('cartSpan')
                    cartSpan.removeAttribute("hidden");
                    cartSpan.innerHTML=parseInt(cartSpan.innerHTML)+1
                    Toastify({
                        text: 'Added to ðŸ›’',
                        backgroundColor: 'linear-gradient(to right, #fd7e14, #ffc107)',
                        duration: 2000,
                        close: true,
                        gravity: 'top', 
                        position: 'right', 
                    }).showToast();
                }
            })
            .catch(function (error) {
                console.error(error);
            });
    }
    function plus(id){
        // alert(id)
        event.preventDefault();
        axios.post('/incrementQty?id='+id, { productId: id ,i:1})
            .then(function (response) {
                // console.log(response);
                if(response.data.success){
                    let cartSpan=document.getElementById('cartSpan')
                    cartSpan.removeAttribute("hidden");
                    cartSpan.innerHTML=parseInt(cartSpan.innerHTML)+1

                    let quantityField=document.getElementById('quantity'+id)
                    console.log(quantityField.value);
                    quantityField.value=parseInt(quantityField.value)+1

                    let totalPrice=document.getElementById('totalPrice'+id)
                    totalPrice.innerHTML=parseInt(totalPrice.innerHTML)+response.data.priceOfOne

                    let totalQuantity=document.getElementById('totalQuantity')
                    totalQuantity.innerHTML=parseInt(totalQuantity.innerHTML)+1

                    let subTotalPrice=document.getElementById('subTotalPrice')
                    subTotalPrice.innerHTML=parseInt(subTotalPrice.innerHTML)+response.data.priceOfOne
                }else{
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: response.data.message
                        })
                }
            })
            .catch(function (error) {
                console.error(error);
            });
    }
    function minus(id){
        // alert(id)
        event.preventDefault();
        axios.post('/incrementQty?id='+id, { productId: id ,i:-1})
            .then(function (response) {
                // console.log(response);
                if(response.data.success){
                    let cartSpan=document.getElementById('cartSpan')
                    cartSpan.removeAttribute("hidden");
                    cartSpan.innerHTML=parseInt(cartSpan.innerHTML)-1

                    let quantityField=document.getElementById('quantity'+id)
                    console.log(quantityField.value);
                    quantityField.value=parseInt(quantityField.value)-1

                    let totalPrice=document.getElementById('totalPrice'+id)
                    totalPrice.innerHTML=parseInt(totalPrice.innerHTML)-response.data.priceOfOne

                    let totalQuantity=document.getElementById('totalQuantity')
                    totalQuantity.innerHTML=parseInt(totalQuantity.innerHTML)-1

                    let subTotalPrice=document.getElementById('subTotalPrice')
                    subTotalPrice.innerHTML=parseInt(subTotalPrice.innerHTML)-response.data.priceOfOne
                }
            })
            .catch(function (error) {
                console.error(error);
            });
    }
    function remove(id){
        // alert(id)
        event.preventDefault();
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success',
                cancelButton: 'btn btn-danger m-3'
            },
            buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, remove it!',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true
            }).then((result) => {
            if (result.isConfirmed) {
                axios.post('/removeCart?id='+id)
                .then((response)=>{
                    // console.log(response.data);
                    location.reload();
                }).catch(error => {
                console.log(error);
                });
            } else if (
                /* Read more about handling dismissals below */
                result.dismiss === Swal.DismissReason.cancel
            ) {
                swalWithBootstrapButtons.fire(
                'Cancelled',
                'Your imaginary file is safe :)',
                'error'
                )
            }
        })
    }
    // -------------- place order -------------

    function placeOrder(){
        const selectedRadioButton = document.querySelector('input[name="address"]:checked');
        const selectedValue = selectedRadioButton.value;
        const selectedPaymentButton = document.querySelector('input[name="selector"]:checked');
        const selectedPayment = selectedPaymentButton.value;
        // alert(selectedPayment)
        console.log(selectedPayment);
        const subTotalPrice = document.getElementById('subTotalPrice').innerText
        const discountPrice = document.getElementById('discountPrice').innerText
        const totalamount = document.getElementById('totalPrice').innerText
        // const discountamount = document.getElementById('discountPrice').innerText
        let code=''
        // alert(subTotalPrice)
        // alert(totalamount)
        if(parseInt(subTotalPrice) != parseInt(totalamount)){
            code=document.getElementById('couponCode').value.trim()
            // alert("code")
            // alert(code)
        }

        axios.post('/checkoutPost', { addressId: selectedValue ,selectedPayment:selectedPayment,subTotalPrice,discountPrice,totalamount,code})
            .then(response => {
                if(response.data.success===true){
                    console.log('norm');
                    let product=''
                    response.data.orderData.products.forEach(element => {
                        product+=  `<li>
                                ${element.product_id.productName} X ${element.quantity} - ${element.totalPrice}
                            </li>`
                            })
                    Swal.fire({
                    position: 'center',
                    icon: 'success',
                    title: 'Order has been placed successfully',
                    // html:`<p>${addressData.address}</p>`
                    html:`<ul>
                            <li>
                                deivery Address:${response.data.addressData.address},${response.data.addressData.city},
                                ${response.data.addressData.state},${response.data.addressData.pincode}
                            </li>
                            <br>
                            ${product}
                        </ul>`
                    // showConfirmButton: false,
                    // timer: 1500
                    }).then((result)=>{
                        window.location.href = response.data.redirectUrl;
                    })
                    
                }else if(response.data.success=='online'){
                    console.log(response.data.order);

                    // alert('hai')
                    razorpayPayment(response.data.order);
                }else{
                    let prd=''
                    response.data.data.forEach(element => {
                        prd+=element.product_id.productName+','
                    })
                    Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: `${prd} product is out of quantity`,
                    footer: `<a href="${response.data.redirectUrl}">Change quantity?</a>`
                    })
                }

                // document.getElementById('checkoutContainer').innerHTML = response.data.html;
            })
            .catch(error => {
                // Handle the error
            });

    }

    function razorpayPayment(order) {
            // console.log("working 1", order);
            console.log(order)

            var options = {
                "key": "rzp_test_tFfhFZy4sSrg7r", // Enter the Key ID generated from the Dashboard
                "amount": order.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
                "currency": "INR",
                "name": "ShoeCart",
                "description": "Test Transaction",
                "image": "https://example.com/your_logo",
                "order_id": order.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
                "handler": function (orderSave) {
                    // console.log("response", response);
                    // alert(orderSave.razorpay_payment_id);
                    // alert(orderSave.razorpay_order_id);
                    // alert(orderSave.razorpay_signature);

                    verifyPayment(orderSave, order);
                },
                "prefill": {
                    "name": "Gaurav Kumar",
                    "email": "gaurav.kumar@example.com",
                    "contact": "9000090000"
                },
                "notes": {
                    "address": "Razorpay Corporate Office"
                },
                "theme": {
                    "color": "#3399cc"
                }
            };

            var rzp1 = new Razorpay(options);
            rzp1.open();
        }

        function verifyPayment(payment, order) {
            // alert('verify')
            $.ajax({
                url: '/verify-payment', // replace with your server endpoint
                method: 'post',
                data: {
                    payment,
                    order,
                },
                success: function (response) {
                    if (response.success) {
                        let product=''
                    response.orderData.products.forEach(element => {
                        product+=  `<li>
                                ${element.product_id.productName} X ${element.quantity} - ${element.totalPrice}
                            </li>`
                            })
                    Swal.fire({
                    position: 'center',
                    icon: 'success',
                    title: 'Order has been placed successfully',
                    // html:`<p>${addressData.address}</p>`
                    html:`<ul>
                            <li>
                                deivery Address:${response.addressData.address},${response.addressData.city},
                                ${response.addressData.state},${response.addressData.pincode}
                            </li>
                            <br>
                            ${product}
                        </ul>`
                    // showConfirmButton: false,
                    // timer: 1500
                    }).then((result)=>{
                        window.location.href = response.redirectUrl;
                    })
                    } else {
                        alert("payment failed");
                        window.location.href('/');
                    }

                }
            });
        }
    // ----- remove address ----------
    function removeAddress(id){
        event.preventDefault();
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success',
                cancelButton: 'btn btn-danger m-3'
            },
            buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, remove it!',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true
            }).then((result) => {
            if (result.isConfirmed) {
                axios.post('/deleteAddress?id='+id)
                .then((response)=>{
                    // location.reload();
                    $('#reloadDiv').load('/userProfile #reloadDiv',()=>{
						swal.fire({
							title:'success',
							text:'Address removed successfully ',
							icon:'success',
							timer:1500,
                            showConfirmButton: false,
						})
					})
                    // var newAddressHtml = response.updatedAddressHTML;
                    // $('.contact__address').html(newAddressHtml);
                }).catch(error => {
                console.log(error);
                });
            } else if (
                /* Read more about handling dismissals below */
                result.dismiss === Swal.DismissReason.cancel
            ) {
                swalWithBootstrapButtons.fire(
                'Cancelled',
                'Your imaginary file is safe :)',
                'error'
                )
            }
        })
    }
    // ----- cancel order
    function cancel(id){
        
        event.preventDefault();
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success',
                cancelButton: 'btn btn-danger m-3'
            },
            buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, remove it!',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true
            }).then((result) => {
            if (result.isConfirmed) {
                axios.post('/cancelOrder?id='+id)
                .then((response)=>{
                    location.reload();
                }).catch(error => {
                console.log(error);
                });
            } else if (
                /* Read more about handling dismissals below */
                result.dismiss === Swal.DismissReason.cancel
            ) {
                swalWithBootstrapButtons.fire(
                'Cancelled',
                'Your imaginary file is safe :)',
                'error'
                )
            }
        })
    }
    function orderReturn(id){
        event.preventDefault();
        const reasonInput = document.getElementById('reason').value;
        const resonDiv = document.querySelector('.resonDiv');
        resonDiv.removeAttribute('hidden');
        resonDiv.classList.add('d-flex');
        resonDiv.classList.add('justify-content-center');
        resonDiv.classList.add('align-items-center');
        if (reasonInput.trim() === '') {
            Toastify({
                        text: 'Please provide a reason for the return',
                        backgroundColor: 'linear-gradient(to right, #fd7e14, #ffc107)',
                        duration: 2000,
                        close: true,
                        gravity: 'top', 
                        position: 'right', 
                        // icon: '/static/logo/b.png',
                        border: '1px solid #ccc',
                        borderRadius: '10px', // Set border radius
                        boxShadow: '2px 2px 4px rgba(0, 0, 0, 0.2)', // Add a shadow
                        animation: 'fade', // Choose an animation
                        callback: function () { console.log('Toast shown!'); },
                    }).showToast();
            return;
        }else{
            const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success',
                cancelButton: 'btn btn-danger m-3'
            },
            buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, return it!',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true
            }).then((result) => {
            if (result.isConfirmed) {
                axios.put('/returnOrder?id='+id,{reason:reasonInput})
                .then((response)=>{
                    location.reload();
                }).catch(error => {
                console.log(error);
                });
            } else if (
                /* Read more about handling dismissals below */
                result.dismiss === Swal.DismissReason.cancel
            ) {
                swalWithBootstrapButtons.fire(
                'Cancelled',
                'Your imaginary file is safe :)',
                'error'
                )
            }
        })
        }
        
    }
    // -------------- wish list ------------
    function addToWishlist(id){
        event.preventDefault();
        $('.addWish'+id).toggleClass("bg-danger");
        axios.post('/addToWishlistPost?id='+id, { productId: id })
            .then(function (response) {
                if(response.data.status=='added'){
                    Toastify({
                        text: response.data.message,
                        backgroundColor: 'linear-gradient(to right, #fd7e14, #ffc107)',
                        duration: 2000,
                        close: true,
                        gravity: 'top', 
                        position: 'right', 
                    }).showToast();
                }else if(response.data.status=='removed'){
                    Toastify({
                        text: response.data.message,
                        backgroundColor: 'linear-gradient(to right, #fd7e14, #ffc107)',
                        duration: 2000,
                        close: true,
                        gravity: 'top', 
                        position: 'right', 
                    }).showToast();
                }else{
                    window.location.href = '/login?message=need to login first';
                }
            })
            .catch(function (error) {
                console.error(error);
            });
    }
    // ------- remove wishlist
    function removeFromWishlist(id){
        // alert(id)
        event.preventDefault();
        $('.addWish'+id).toggleClass("bg-danger");
        $('.removeWish'+id).attr("hidden", true);

        axios.post('/addToWishlistPost?id='+id, { productId: id })
            .then(function (response) {
                console.log(response);
                if(response.data.status=='removed'){
                    Toastify({
                        text: response.data.message,
                        backgroundColor: 'linear-gradient(to right, #fd7e14, #ffc107)',
                        duration: 2000,
                        close: true,
                        gravity: 'top', 
                        position: 'right', 
                    }).showToast();
                }
            })
            .catch(function (error) {
                console.error(error);
            });
    }
    // --------- forgotPasswordEmail
    function forgotPasswordEmail(id){
        event.preventDefault();
        const email=document.getElementById('emailForgotPassword').value
        // alert(email)
        console.log(email)
        axios.post('/forgotPasswordEmail', { email:email})
            .then(function (response) {
                console.log(response);
                if(response.data.success){
                    
                    const messageElement = document.getElementById('message');
                    messageElement.innerText = response.data.message;
                   const closeButton = document.getElementById('closeModalBtn');
                    closeButton.click();
                }else{
                    const messageElement = document.getElementById('message');
                    messageElement.innerText = response.data.message;
                    const closeButton = document.getElementById('closeModalBtn');
                    closeButton.click();
                }
            })
            .catch(function (error) {
                console.error(error);
            });
    }
    // ----------- apply coupon
    var discountPrice
    function applyCoupon() {
        event.preventDefault()
        let code=document.getElementById('couponCode').value
        if(code!=''){
            // alert('yes')
            const totalPrice=document.getElementById('totalPrice').innerText
            discountPrice=document.getElementById('discountPrice').innerText
        axios.post('/applyCoupon', { code:code,totalPrice,discountPrice})
        .then(function (response) {
                console.log(response.data.success);
                if(response.data.success){
                    document.getElementById('totalPrice').innerText=response.data.updatedTotalPrice
                    document.getElementById('discountPrice').innerText=response.data.discountAmount+parseInt(discountPrice)
                    let btn = document.getElementById('couponBtn')
                    btn.setAttribute("hidden",true)
                    let couponCancelBtn = document.getElementById("couponCancelBtn");
                    couponCancelBtn.removeAttribute("hidden");
                    let element=document.getElementById('couponCode')
                    element.setAttribute("readonly","true")
                    let msg=document.getElementById('couponMessage')
                    msg.removeAttribute("hidden");
                    msg.innerHTML=response.data.message
                }else{
                    let element=document.getElementById('couponMessage')
                    element.removeAttribute("hidden");
                    element.innerHTML=response.data.message
                }
            })
            .catch(function (error) {
                console.error(error);
            });
        }else{
            alert('no')
        }
        
    }
    
    function addCoupon(code){
        document.getElementById('couponCode').value=code
        isCode()
    }

    function removeCoupon(){
        event.preventDefault()
        document.getElementById('totalPrice').innerText=document.getElementById('subTotalPrice').innerText
        document.getElementById('discountPrice').innerText=discountPrice
        let btn = document.getElementById('couponBtn')
        btn.removeAttribute("hidden")
        let couponCancelBtn = document.getElementById("couponCancelBtn");
        couponCancelBtn.setAttribute("hidden",true);
        let element=document.getElementById('couponCode')
        element.removeAttribute("readonly")
        element.value=''
        let msg=document.getElementById('couponMessage')
        msg.setAttribute("hidden",true);
        document.getElementById('couponBtn').style.pointerEvents  ='none'
    }

    function isCode(){
        let element=document.getElementById('couponMessage')
                    element.setAttribute("hidden","hidden");
        let code=document.getElementById('couponCode').value.trim()
        if(code!=''){
            let btn = document.getElementById('couponBtn').style.pointerEvents  ='auto'
        }else{
            let btn = document.getElementById('couponBtn').style.pointerEvents  ='none'
        }
    }
</script>



<!-- blank -->
<script>
    function addAdress(){
        event.preventDefault()
        
        const form = document.getElementById('addressForm');
        const formData = $('#addressForm').serialize()
        // console.log(formData);
        // console.log("Name: " + formData.get('name'));
        // let name = formData.get('name')
        axios.post('/addAddress', formData)
        .then(function (response) {
                if(response.data.success){
                    $("#exampleModal").removeClass("show");
                    $(".modal-backdrop").removeClass("modal-backdrop");
                    $(".modal-open").removeClass("modal-open");
                    let element=document.querySelector('#exampleModal')
                    element.style.display = "none";
                    // $("#addressForm").reset();
                    // let modal=document.getElementById('exampleModal')
                    // modal.removeClass('show')
                    $('#reloadDiv').load('/userProfile #reloadDiv',()=>{
						swal.fire({
							title:'success',
							text:'Address added successfully ',
							icon:'success',
                            showConfirmButton: false,
						})
					})
                }
            })
            .catch(function (error) {
                console.error(error);
            });
    }
    function editAdress(id,i){
        event.preventDefault()
        
        // const form = document.getElementById('addressForm');
        const formData = $('#addressForm'+id).serialize()
        console.log(formData);
        // console.log("Name: " + formData.get('name'));
        // let name = formData.get('name')
        axios.post('/updateAddress?id='+id, formData)
        .then(function (response) {
                if(response.data.success){
                    $("#editAddressModal"+i).removeClass("show");
                    $(".modal-backdrop").removeClass("modal-backdrop");
                    $(".modal-open").removeClass("modal-open");
                    let element=document.querySelector('#editAddressModal'+i)
                    element.style.display = "none";
                    // $("#addressForm").reset();
                    // let modal=document.getElementById('exampleModal')
                    // modal.removeClass('show')
                    $('#reloadDiv').load('/userProfile #reloadDiv',()=>{
						swal.fire({
							title:'success',
							text:'Address added successfully ',
							icon:'success',
                            showConfirmButton: false,
						})
					})
                }
            })
            .catch(function (error) {
                console.error(error);
            });
    }
</script>
</body>

</html>