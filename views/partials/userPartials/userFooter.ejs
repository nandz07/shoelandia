<!-- start footer Area -->
<footer class="footer-area section_gap">
    <div class="container">
        <div class="row">
            <div class="col-lg-3  col-md-6 col-sm-6">
                <div class="single-footer-widget">
                    <h6>About Us</h6>
                    <p>
                        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore dolore
                        magna aliqua.
                    </p>
                </div>
            </div>
            <div class="col-lg-4  col-md-6 col-sm-6">
                <div class="single-footer-widget">
                    <h6>Newsletter</h6>
                    <p>Stay update with our latest</p>
                    <div class="" id="mc_embed_signup">

                        <form target="_blank" novalidate="true" action="https://spondonit.us12.list-manage.com/subscribe/post?u=1462626880ade1ac87bd9c93a&amp;id=92a4423d01"
                         method="get" class="form-inline">

                            <div class="d-flex flex-row">

                                <input class="form-control" name="EMAIL" placeholder="Enter Email" onfocus="this.placeholder = ''" onblur="this.placeholder = 'Enter Email '"
                                 required="" type="email">


                                <button class="click-btn btn btn-default"><i class="fa fa-long-arrow-right" aria-hidden="true"></i></button>
                                <div style="position: absolute; left: -5000px;">
                                    <input name="b_36c4fd991d266f23781ded980_aefe40901a" tabindex="-1" value="" type="text">
                                </div>

                                <!-- <div class="col-lg-4 col-md-4">
                                            <button class="bb-btn btn"><span class="lnr lnr-arrow-right"></span></button>
                                        </div>  -->
                            </div>
                            <div class="info"></div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="col-lg-3  col-md-6 col-sm-6">
                <div class="single-footer-widget mail-chimp">
                    <h6 class="mb-20">Instragram Feed</h6>
                    <ul class="instafeed d-flex flex-wrap">
                        <li><img src="/img/i1.jpg" alt=""></li>
                        <li><img src="/img/i2.jpg" alt=""></li>
                        <li><img src="/img/i3.jpg" alt=""></li>
                        <li><img src="/img/i4.jpg" alt=""></li>
                        <li><img src="/img/i5.jpg" alt=""></li>
                        <li><img src="/img/i6.jpg" alt=""></li>
                        <li><img src="/img/i7.jpg" alt=""></li>
                        <li><img src="/img/i8.jpg" alt=""></li>
                    </ul>
                </div>
            </div>
            <div class="col-lg-2 col-md-6 col-sm-6">
                <div class="single-footer-widget">
                    <h6>Follow Us</h6>
                    <p>Let us be social</p>
                    <div class="footer-social d-flex align-items-center">
                        <a href="#"><i class="fa fa-facebook"></i></a>
                        <a href="#"><i class="fa fa-twitter"></i></a>
                        <a href="#"><i class="fa fa-dribbble"></i></a>
                        <a href="#"><i class="fa fa-behance"></i></a>
                    </div>
                </div>
            </div>
        </div>
        <div class="footer-bottom d-flex justify-content-center align-items-center flex-wrap">
            <p class="footer-text m-0"><!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
Copyright &copy;<script>document.write(new Date().getFullYear());</script> All rights reserved | This template is made with <i class="fa fa-heart-o" aria-hidden="true"></i> by <a href="https://colorlib.com" target="_blank">Colorlib</a>
<!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
</p>
        </div>
    </div>
</footer>
<!-- End footer Area -->

<script src="/js/vendor/jquery-2.2.4.min.js"></script>
<!-- <script src='https://code.jquery.com/jquery-2.2.4.min.js'></script> -->

<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4"
 crossorigin="anonymous"></script>
<script src="/js/vendor/bootstrap.min.js"></script>
<script src="/js/jquery.ajaxchimp.min.js"></script>
<script src="/js/jquery.nice-select.min.js"></script>
<script src="/js/jquery.sticky.js"></script>
<script src="/js/nouislider.min.js"></script>
<script src="/js/countdown.js"></script>
<script src="/js/jquery.magnific-popup.min.js"></script>
<script src="/js/owl.carousel.min.js"></script>
<!--gmaps Js-->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCjCGmQ0Uq4exrzdcL6rvxywDDOvfAu6eE"></script>
<script src="/js/gmaps.min.js"></script>
<!--  -->
<script src="/js/main.js"></script>
<script src="/js/zoom.js"></script>
<!--  -->
<!-- <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> -->
<script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/jquery.validate.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="/js/userValidation.js"></script>
<!--  -->
<script>
//     $(function() {
//     $(".addWish").on("click", function() {
//         alert('hai')
//       $('.lnr-heart').toggleClass("bg-danger");
//     });
//   });
    </script>
<script>
    $(function(e){
        e.preventDefault();
    $(".xzoom, .xzoom-gallery").xzoom({
        zoomwidth:400,
        tint:"#333",
        xoffset:15
    })
})
</script>
<script>
    function addToCart(id){
        event.preventDefault();
        axios.get('/addToCart?id='+id, { productId: id })
            .then(function (response) {
                console.log(response);
                if(response.data.success){
                    let cartSpan=document.getElementById('cartSpan')
                    cartSpan.removeAttribute("hidden");
                    cartSpan.innerHTML=parseInt(cartSpan.innerHTML)+1
                }
            })
            .catch(function (error) {
                console.error(error);
            });
    }
    function plus(id){
        // alert(id)
        event.preventDefault();
        axios.post('/incrementQty?id='+id, { productId: id ,i:1})
            .then(function (response) {
                // console.log(response);
                if(response.data.success){
                    let cartSpan=document.getElementById('cartSpan')
                    cartSpan.removeAttribute("hidden");
                    cartSpan.innerHTML=parseInt(cartSpan.innerHTML)+1

                    let quantityField=document.getElementById('quantity'+id)
                    console.log(quantityField.value);
                    quantityField.value=parseInt(quantityField.value)+1

                    let totalPrice=document.getElementById('totalPrice'+id)
                    totalPrice.innerHTML=parseInt(totalPrice.innerHTML)+response.data.priceOfOne

                    let totalQuantity=document.getElementById('totalQuantity')
                    totalQuantity.innerHTML=parseInt(totalQuantity.innerHTML)+1

                    let subTotalPrice=document.getElementById('subTotalPrice')
                    subTotalPrice.innerHTML=parseInt(subTotalPrice.innerHTML)+response.data.priceOfOne
                }else{
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: response.data.message
                        })
                }
            })
            .catch(function (error) {
                console.error(error);
            });
    }
    function minus(id){
        // alert(id)
        event.preventDefault();
        axios.post('/incrementQty?id='+id, { productId: id ,i:-1})
            .then(function (response) {
                // console.log(response);
                if(response.data.success){
                    let cartSpan=document.getElementById('cartSpan')
                    cartSpan.removeAttribute("hidden");
                    cartSpan.innerHTML=parseInt(cartSpan.innerHTML)-1

                    let quantityField=document.getElementById('quantity'+id)
                    console.log(quantityField.value);
                    quantityField.value=parseInt(quantityField.value)-1

                    let totalPrice=document.getElementById('totalPrice'+id)
                    totalPrice.innerHTML=parseInt(totalPrice.innerHTML)-response.data.priceOfOne

                    let totalQuantity=document.getElementById('totalQuantity')
                    totalQuantity.innerHTML=parseInt(totalQuantity.innerHTML)-1

                    let subTotalPrice=document.getElementById('subTotalPrice')
                    subTotalPrice.innerHTML=parseInt(subTotalPrice.innerHTML)-response.data.priceOfOne
                }
            })
            .catch(function (error) {
                console.error(error);
            });
    }
    function remove(id){
        // alert(id)
        event.preventDefault();
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success',
                cancelButton: 'btn btn-danger m-3'
            },
            buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, remove it!',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true
            }).then((result) => {
            if (result.isConfirmed) {
                axios.post('/removeCart?id='+id)
                .then((response)=>{
                    // console.log(response.data);
                    location.reload();
                }).catch(error => {
                console.log(error);
                });
            } else if (
                /* Read more about handling dismissals below */
                result.dismiss === Swal.DismissReason.cancel
            ) {
                swalWithBootstrapButtons.fire(
                'Cancelled',
                'Your imaginary file is safe :)',
                'error'
                )
            }
        })
    }
    // -------------- place order -------------

    function placeOrder(){
        const selectedRadioButton = document.querySelector('input[name="address"]:checked');
        const selectedValue = selectedRadioButton.value;
        const selectedPaymentButton = document.querySelector('input[name="selector"]:checked');
        const selectedPayment = selectedPaymentButton.value;

        axios.post('/checkoutPost', { addressId: selectedValue ,selectedPayment:selectedPayment})
            .then(response => {
                if(response.data.success){
                    let product=''
                    response.data.orderData.products.forEach(element => {
                        product+=  `<li>
                                ${element.product_id.productName} X ${element.quantity} - ${element.totalPrice}
                            </li>`
                            })
                    Swal.fire({
                    position: 'center',
                    icon: 'success',
                    title: 'Order has been placed successfully',
                    // html:`<p>${addressData.address}</p>`
                    html:`<ul>
                            <li>
                                deivery Address:${response.data.addressData.address},${response.data.addressData.city},
                                ${response.data.addressData.state},${response.data.addressData.pincode}
                            </li>
                            <br>
                            ${product}
                        </ul>`
                    // showConfirmButton: false,
                    // timer: 1500
                    }).then((result)=>{
                        window.location.href = response.data.redirectUrl;
                    })
                    
                }else{
                    let prd=''
                    response.data.data.forEach(element => {
                        prd+=element.product_id.productName+','
                    })
                    Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: `${prd} product is out of quantity`,
                    footer: `<a href="${response.data.redirectUrl}">Change quantity?</a>`
                    })
                }

                // document.getElementById('checkoutContainer').innerHTML = response.data.html;
            })
            .catch(error => {
                // Handle the error
            });

    }
    // ----- remove address ----------
    function removeAddress(id){
        event.preventDefault();
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success',
                cancelButton: 'btn btn-danger m-3'
            },
            buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, remove it!',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true
            }).then((result) => {
            if (result.isConfirmed) {
                axios.post('/deleteAddress?id='+id)
                .then((response)=>{
                    location.reload();
                }).catch(error => {
                console.log(error);
                });
            } else if (
                /* Read more about handling dismissals below */
                result.dismiss === Swal.DismissReason.cancel
            ) {
                swalWithBootstrapButtons.fire(
                'Cancelled',
                'Your imaginary file is safe :)',
                'error'
                )
            }
        })
    }
    // ----- cancel order
    function cancel(id){
        
        event.preventDefault();
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success',
                cancelButton: 'btn btn-danger m-3'
            },
            buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, remove it!',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true
            }).then((result) => {
            if (result.isConfirmed) {
                axios.post('/cancelOrder?id='+id)
                .then((response)=>{
                    // console.log(response.data);
                    location.reload();
                }).catch(error => {
                console.log(error);
                });
            } else if (
                /* Read more about handling dismissals below */
                result.dismiss === Swal.DismissReason.cancel
            ) {
                swalWithBootstrapButtons.fire(
                'Cancelled',
                'Your imaginary file is safe :)',
                'error'
                )
            }
        })
    }
    // -------------- wish list ------------
    function addToWishlist(id){
        event.preventDefault();
        $('.addWish'+id).toggleClass("bg-danger");
        axios.post('/addToWishlistPost?id='+id, { productId: id })
            .then(function (response) {
                console.log(response);
                if(response.data.success){
                    // let cartSpan=document.getElementById('cartSpan')
                    // cartSpan.removeAttribute("hidden");
                    // cartSpan.innerHTML=parseInt(cartSpan.innerHTML)+1
                }
            })
            .catch(function (error) {
                console.error(error);
            });
    }
    // ------- remove wishlist
    function removeFromWishlist(id){
        // alert(id)
        event.preventDefault();
        $('.addWish'+id).toggleClass("bg-danger");
        $('.removeWish'+id).attr("hidden", true);

        axios.post('/addToWishlistPost?id='+id, { productId: id })
            .then(function (response) {
                console.log(response);
                if(response.data.success){
                    let cartSpan=document.getElementById('cartSpan')
                    cartSpan.removeAttribute("hidden");
                    cartSpan.innerHTML=parseInt(cartSpan.innerHTML)+1
                }
            })
            .catch(function (error) {
                console.error(error);
            });
    }
    // --------- forgotPasswordEmail
    function forgotPasswordEmail(id){
        event.preventDefault();
        const email=document.getElementById('emailForgotPassword').value
        // alert(email)
        console.log(email)
        axios.post('/forgotPasswordEmail', { email:email})
            .then(function (response) {
                console.log(response);
                if(response.data.success){
                    
                    const messageElement = document.getElementById('message');
                    messageElement.innerText = response.data.message;
                   const closeButton = document.getElementById('closeModalBtn');
                    closeButton.click();
                }else{
                    const messageElement = document.getElementById('message');
                    messageElement.innerText = response.data.message;
                    const closeButton = document.getElementById('closeModalBtn');
                    closeButton.click();
                }
            })
            .catch(function (error) {
                console.error(error);
            });
    }
</script>



<!-- ----otp -->

<script>
    // Function to start the timer
    function startTimer() {
        let seconds = 10;
        const timerElement = document.getElementById('timer');

        function updateTimer() {
            timerElement.innerText = '00:0'+seconds;
            seconds--;

            if (seconds < 0) {
                clearInterval(timerInterval);
                document.getElementById('reSend').removeAttribute('hidden')
                document.getElementById('reSendp').setAttribute('hidden',true)
                document.getElementById('timer').setAttribute('hidden',true)
                // timerElement.innerText = '<a href="/resendOtp?email=">Resend OTP ?</a>';
            }
        }

        updateTimer(); // Initial update

        // Update the timer every second
        const timerInterval = setInterval(updateTimer, 1000);
    }

    // Start the timer when the page loads
    window.onload = startTimer;
</script>
</body>

</html>